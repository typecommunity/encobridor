<?php
/**
 * Cloaker Pro - Diagn√≥stico Autom√°tico
 * Execute este arquivo em: /cloaker-pro/c/diagnostic.php
 * Acesse: https://ataweb.com.br/cloaker-pro/c/diagnostic.php
 */

ini_set('display_errors', 1);
error_reporting(E_ALL);

echo "<!DOCTYPE html>
<html lang='pt-BR'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>Cloaker Pro - Diagn√≥stico Autom√°tico</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
            background: #0a0a0a; 
            color: #e0e0e0; 
            padding: 2rem; 
            line-height: 1.6;
        }
        .container { max-width: 1200px; margin: 0 auto; }
        h1 { color: #c0c0c0; margin-bottom: 2rem; border-bottom: 2px solid #2a2a2a; padding-bottom: 1rem; }
        h2 { color: #a0a0a0; margin: 2rem 0 1rem; font-size: 1.3rem; }
        .test-section { 
            background: #1a1a1a; 
            border: 1px solid #2a2a2a; 
            border-radius: 8px; 
            padding: 1.5rem; 
            margin-bottom: 1.5rem; 
        }
        .success { color: #4ade80; }
        .error { color: #f87171; }
        .warning { color: #fbbf24; }
        .info { color: #60a5fa; }
        .code { 
            background: #2a2a2a; 
            border: 1px solid #3a3a3a; 
            border-radius: 4px; 
            padding: 1rem; 
            margin: 0.5rem 0; 
            overflow-x: auto; 
            font-family: 'Courier New', monospace; 
            font-size: 0.9rem;
        }
        table { 
            width: 100%; 
            border-collapse: collapse; 
            margin: 1rem 0; 
        }
        th, td { 
            padding: 0.75rem; 
            text-align: left; 
            border-bottom: 1px solid #2a2a2a; 
        }
        th { 
            background: #2a2a2a; 
            color: #c0c0c0; 
            font-weight: 600; 
        }
        tr:hover { background: #1f1f1f; }
        .status-icon { 
            display: inline-block; 
            width: 20px; 
            text-align: center; 
            font-weight: bold; 
        }
        .btn { 
            display: inline-block; 
            padding: 0.5rem 1rem; 
            background: #c0c0c0; 
            color: #0a0a0a; 
            text-decoration: none; 
            border-radius: 4px; 
            margin: 0.25rem; 
            font-weight: 500;
        }
        .btn:hover { background: #e0e0e0; }
        .alert { 
            padding: 1rem; 
            border-radius: 4px; 
            margin: 1rem 0; 
            border-left: 4px solid;
        }
        .alert-success { background: #064e3b; border-color: #4ade80; }
        .alert-error { background: #7f1d1d; border-color: #f87171; }
        .alert-warning { background: #78350f; border-color: #fbbf24; }
        .alert-info { background: #1e3a8a; border-color: #60a5fa; }
    </style>
</head>
<body>
    <div class='container'>
        <h1>üîç Cloaker Pro - Diagn√≥stico Autom√°tico</h1>";

// ==============================================
// TESTE 1: VERIFICAR ESTRUTURA DE DIRET√ìRIOS
// ==============================================
echo "<div class='test-section'>
        <h2>1Ô∏è‚É£ Estrutura de Diret√≥rios</h2>";

$basePath = dirname(__DIR__);
$requiredDirs = [
    'core' => $basePath . '/core',
    'admin' => $basePath . '/admin',
    'storage' => $basePath . '/storage',
    'storage/logs' => $basePath . '/storage/logs',
    'c' => __DIR__
];

echo "<table>
        <tr><th>Diret√≥rio</th><th>Status</th><th>Caminho</th></tr>";

foreach ($requiredDirs as $name => $path) {
    $exists = is_dir($path);
    $icon = $exists ? "<span class='status-icon success'>‚úì</span>" : "<span class='status-icon error'>‚úó</span>";
    $status = $exists ? "<span class='success'>Existe</span>" : "<span class='error'>N√£o encontrado</span>";
    echo "<tr><td>$name</td><td>$icon $status</td><td><code>" . htmlspecialchars($path) . "</code></td></tr>";
}

echo "</table></div>";

// ==============================================
// TESTE 2: VERIFICAR ARQUIVOS NECESS√ÅRIOS
// ==============================================
echo "<div class='test-section'>
        <h2>2Ô∏è‚É£ Arquivos Necess√°rios</h2>";

$requiredFiles = [
    'config.php' => $basePath . '/config.php',
    'Database.php' => $basePath . '/core/Database.php',
    'Campaign.php' => $basePath . '/core/Campaign.php',
    'Detector.php' => $basePath . '/core/Detector.php',
    'Analytics.php' => $basePath . '/core/Analytics.php',
    'c/index.php' => __DIR__ . '/index.php',
    'c/.htaccess' => __DIR__ . '/.htaccess'
];

echo "<table>
        <tr><th>Arquivo</th><th>Status</th><th>Caminho</th></tr>";

foreach ($requiredFiles as $name => $path) {
    $exists = file_exists($path);
    $icon = $exists ? "<span class='status-icon success'>‚úì</span>" : "<span class='status-icon error'>‚úó</span>";
    $status = $exists ? "<span class='success'>Existe</span>" : "<span class='error'>N√£o encontrado</span>";
    echo "<tr><td>$name</td><td>$icon $status</td><td><code>" . htmlspecialchars($path) . "</code></td></tr>";
}

echo "</table></div>";

// ==============================================
// TESTE 3: VERIFICAR CONFIG.PHP E CONEX√ÉO
// ==============================================
echo "<div class='test-section'>
        <h2>3Ô∏è‚É£ Configura√ß√£o e Banco de Dados</h2>";

if (file_exists($basePath . '/config.php')) {
    require_once $basePath . '/config.php';
    
    echo "<p><span class='success'>‚úì</span> config.php carregado com sucesso</p>";
    
    echo "<div class='code'>";
    echo "<strong>BASE_URL:</strong> " . (defined('BASE_URL') ? BASE_URL : 'N√£o definido') . "<br>";
    echo "<strong>DB_HOST:</strong> " . (defined('DB_HOST') ? DB_HOST : 'N√£o definido') . "<br>";
    echo "<strong>DB_NAME:</strong> " . (defined('DB_NAME') ? DB_NAME : 'N√£o definido') . "<br>";
    echo "<strong>DB_USER:</strong> " . (defined('DB_USER') ? DB_USER : 'N√£o definido') . "<br>";
    echo "</div>";
    
    // Testar conex√£o com banco
    if (isset($pdo) && $pdo instanceof PDO) {
        echo "<p><span class='success'>‚úì</span> Conex√£o PDO estabelecida</p>";
        
        // Testar query
        try {
            $stmt = $pdo->query("SELECT COUNT(*) as total FROM campaigns");
            $result = $stmt->fetch();
            echo "<p><span class='success'>‚úì</span> Total de campanhas no banco: <strong>" . $result['total'] . "</strong></p>";
        } catch (Exception $e) {
            echo "<p><span class='error'>‚úó</span> Erro ao consultar banco: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p><span class='error'>‚úó</span> Conex√£o PDO n√£o estabelecida</p>";
    }
} else {
    echo "<p><span class='error'>‚úó</span> config.php n√£o encontrado</p>";
}

echo "</div>";

// ==============================================
// TESTE 4: VERIFICAR MOD_REWRITE
// ==============================================
echo "<div class='test-section'>
        <h2>4Ô∏è‚É£ Apache mod_rewrite</h2>";

if (function_exists('apache_get_modules')) {
    $modules = apache_get_modules();
    if (in_array('mod_rewrite', $modules)) {
        echo "<p><span class='success'>‚úì</span> mod_rewrite est√° <strong class='success'>ATIVO</strong></p>";
    } else {
        echo "<p><span class='error'>‚úó</span> mod_rewrite est√° <strong class='error'>INATIVO</strong></p>";
        echo "<div class='alert alert-error'>
                <strong>A√ß√£o necess√°ria:</strong> Entre em contato com o suporte da hospedagem para ativar mod_rewrite.
              </div>";
    }
} else {
    echo "<p><span class='warning'>‚ö†</span> N√£o foi poss√≠vel verificar (fun√ß√£o apache_get_modules n√£o dispon√≠vel)</p>";
    echo "<p class='info'>Isso √© normal em alguns ambientes. Tente acessar uma URL com slug para verificar.</p>";
}

echo "</div>";

// ==============================================
// TESTE 5: LISTAR CAMPANHAS
// ==============================================
echo "<div class='test-section'>
        <h2>5Ô∏è‚É£ Campanhas Cadastradas</h2>";

if (file_exists($basePath . '/core/Campaign.php')) {
    require_once $basePath . '/core/Campaign.php';
    
    try {
        $campaign = new Campaign();
        $campaigns = $campaign->getAll();
        
        if (empty($campaigns['data'])) {
            echo "<div class='alert alert-warning'>
                    <strong>Nenhuma campanha cadastrada.</strong> Crie uma campanha no painel admin primeiro.
                  </div>";
        } else {
            echo "<table>
                    <tr>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Slug</th>
                        <th>Status</th>
                        <th>URL P√∫blica</th>
                        <th>A√ß√µes</th>
                    </tr>";
            
            foreach ($campaigns['data'] as $camp) {
                $publicUrl = BASE_URL . '/c/' . $camp['slug'];
                $statusClass = $camp['status'] === 'active' ? 'success' : 'warning';
                
                echo "<tr>
                        <td>" . htmlspecialchars($camp['id']) . "</td>
                        <td>" . htmlspecialchars($camp['name']) . "</td>
                        <td><code>" . htmlspecialchars($camp['slug']) . "</code></td>
                        <td><span class='$statusClass'>" . htmlspecialchars($camp['status']) . "</span></td>
                        <td><code>" . htmlspecialchars($publicUrl) . "</code></td>
                        <td><a href='$publicUrl' target='_blank' class='btn'>Testar</a></td>
                      </tr>";
            }
            
            echo "</table>";
        }
    } catch (Exception $e) {
        echo "<div class='alert alert-error'>
                <strong>Erro:</strong> " . $e->getMessage() . "
              </div>";
    }
}

echo "</div>";

// ==============================================
// TESTE 6: VERIFICAR URL ATUAL
// ==============================================
echo "<div class='test-section'>
        <h2>6Ô∏è‚É£ An√°lise da URL Atual</h2>";

echo "<div class='code'>";
echo "<strong>REQUEST_URI:</strong> " . ($_SERVER['REQUEST_URI'] ?? 'N/A') . "<br>";
echo "<strong>PATH_INFO:</strong> " . ($_SERVER['PATH_INFO'] ?? 'N/A') . "<br>";
echo "<strong>SCRIPT_NAME:</strong> " . ($_SERVER['SCRIPT_NAME'] ?? 'N/A') . "<br>";
echo "<strong>QUERY_STRING:</strong> " . ($_SERVER['QUERY_STRING'] ?? 'N/A') . "<br>";
echo "</div>";

// Simular detec√ß√£o de slug
if (isset($_SERVER['REQUEST_URI'])) {
    $uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
    $parts = array_filter(explode('/', trim($uri, '/')));
    $parts = array_values($parts);
    
    echo "<p><strong>Partes da URL:</strong></p>";
    echo "<div class='code'>" . print_r($parts, true) . "</div>";
    
    $cIndex = array_search('c', $parts);
    if ($cIndex !== false && isset($parts[$cIndex + 1])) {
        $slug = $parts[$cIndex + 1];
        echo "<div class='alert alert-success'>
                <strong>‚úì Slug detectado:</strong> <code>$slug</code>
              </div>";
    } else {
        echo "<div class='alert alert-info'>
                <strong>‚ÑπÔ∏è Nenhum slug na URL atual</strong> (isso √© normal para diagnostic.php)
              </div>";
    }
}

echo "</div>";

// ==============================================
// TESTE 7: PERMISS√ïES
// ==============================================
echo "<div class='test-section'>
        <h2>7Ô∏è‚É£ Permiss√µes de Arquivos</h2>";

$checkPermissions = [
    'c/' => __DIR__,
    'c/index.php' => __DIR__ . '/index.php',
    'c/.htaccess' => __DIR__ . '/.htaccess',
    'storage/' => $basePath . '/storage',
    'storage/logs/' => $basePath . '/storage/logs'
];

echo "<table>
        <tr><th>Item</th><th>Permiss√µes</th><th>Recomendado</th><th>Status</th></tr>";

foreach ($checkPermissions as $name => $path) {
    if (file_exists($path)) {
        $perms = substr(sprintf('%o', fileperms($path)), -3);
        $isDir = is_dir($path);
        $recommended = $isDir ? '755' : '644';
        $ok = ($perms === $recommended);
        $icon = $ok ? "<span class='status-icon success'>‚úì</span>" : "<span class='status-icon warning'>‚ö†</span>";
        $statusText = $ok ? "<span class='success'>OK</span>" : "<span class='warning'>Revisar</span>";
        
        echo "<tr>
                <td>$name</td>
                <td><code>$perms</code></td>
                <td><code>$recommended</code></td>
                <td>$icon $statusText</td>
              </tr>";
    } else {
        echo "<tr>
                <td>$name</td>
                <td colspan='3'><span class='error'>N√£o existe</span></td>
              </tr>";
    }
}

echo "</table></div>";

// ==============================================
// RESUMO E PR√ìXIMOS PASSOS
// ==============================================
echo "<div class='test-section'>
        <h2>üìã Pr√≥ximos Passos</h2>";

$issues = [];

if (!file_exists(__DIR__ . '/index.php')) {
    $issues[] = "Criar arquivo <code>/c/index.php</code>";
}

if (!file_exists(__DIR__ . '/.htaccess')) {
    $issues[] = "Criar arquivo <code>/c/.htaccess</code>";
}

if (function_exists('apache_get_modules')) {
    $modules = apache_get_modules();
    if (!in_array('mod_rewrite', $modules)) {
        $issues[] = "Ativar mod_rewrite no Apache";
    }
}

if (empty($issues)) {
    echo "<div class='alert alert-success'>
            <strong>‚úÖ Tudo OK!</strong> O sistema est√° configurado corretamente.
          </div>
          <p>Se ainda est√° tendo erro 500, verifique:</p>
          <ul>
            <li>Se a campanha com o slug existe e est√° ativa</li>
            <li>Os logs de erro em <code>/storage/logs/error.log</code></li>
            <li>Os logs do Apache</li>
          </ul>";
} else {
    echo "<div class='alert alert-warning'>
            <strong>‚ö†Ô∏è A√ß√µes necess√°rias:</strong>
          </div>
          <ol>";
    
    foreach ($issues as $issue) {
        echo "<li>$issue</li>";
    }
    
    echo "</ol>";
}

echo "<p style='margin-top: 1.5rem;'>
        <a href='" . BASE_URL . "/admin' class='btn'>‚Üê Voltar ao Admin</a>
      </p>";

echo "</div>";

echo "</div></body></html>";